var m=Object.defineProperty;var u=(s,r,i)=>r in s?m(s,r,{enumerable:!0,configurable:!0,writable:!0,value:i}):s[r]=i;var o=(s,r,i)=>(u(s,typeof r!="symbol"?r+"":r,i),i);(function(){"use strict";const f=class{constructor(){o(this,"_controller",new AbortController);o(this,"listeners",new Set)}fetch(e,a={}){f.pendings.has(e)||(f.pendings.set(e,this),fetch(e,{...a,signal:this._controller.signal}).then(l=>{this.listeners.forEach(n=>n.resolve(l.clone()))}).catch(l=>{this.listeners.forEach(n=>n.reject(l))}).finally(()=>{f.pendings.delete(e)}))}abort(){this._controller.abort()}};let s=f;o(s,"pendings",new Map);class r{constructor(e,a){o(this,"resolve");o(this,"reject");o(this,"promise");this.url=e,this.init=a,this.promise=new Promise((l,n)=>{this.resolve=l,this.reject=n})}ready(){let e=s.pendings.get(this.url);return e||(e=new s,e.fetch(this.url,this.init)),e.listeners.add(this),this.promise}abort(){this.reject("User abort.");const e=s.pendings.get(this.url);e&&(e.listeners.delete(this),e.listeners.size===0&&e.abort())}}let i;async function w(c,e,a=!1){const n=await(await e.ready()).blob(),p=await createImageBitmap(n,a?void 0:{imageOrientation:"flipY"});if(!a)return p;i||(i=new OffscreenCanvas(256,256));const t=i.getContext("2d");if(!t)throw new Error('Offscreencanvas.getContext("2d") error!');const{width:h,height:d}=i;return t.drawImage(p,0,0),t.rect(0,0,h,d),t.strokeStyle="#00FFFF",t.font="20px Arial",t.stroke(),t.fillStyle="#FF4444",t.fillText(`${c[0]}`,10,30),t.fillStyle="#44FF44",t.fillText(`${c[1]}`,10,55),t.fillStyle="#66AAFF",t.fillText(`${c[2]}`,10,80),await createImageBitmap(i,{imageOrientation:"flipY"})}const g=new Map;self.onmessage=async c=>{var t;const{id:e,tileNo:a,url:l,debug:n,abort:p}=c.data;if(p){(t=g.get(e))==null||t.abort(),g.delete(e),self.postMessage({id:e,error:!0});return}try{const h=new r(l,{cache:"force-cache"});g.set(e,h);const d=await w(a,h,n);self.postMessage({id:e,bitmap:d},[d])}catch{self.postMessage({id:e,error:!0})}finally{g.delete(e)}}})();
